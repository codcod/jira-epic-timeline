[project]
name = "timeline"
version = "0.2.0-rc.1"
description = "Display timelines of Jira issues"
readme = "README.md"
requires-python = ">=3.13"
dependencies = ["jira", "python-dateutil", "python-dotenv>=1.1.0", "rich"]

[dependency-groups]
dev = [
    "isort>=6.0.1",
    "python-semantic-release>=10.0.2",
]

[project.scripts]
timeline = "timeline.main_cli:main"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pyright]
pythonVersion = "3.13"
venv = ".venv"
venvPath = "."
typeCheckingMode = "basic" # Options: "off", "basic", "strict"

include = ["src", "tests"]

exclude = ["**/node_modules", "**/__pycache__", "**/*.pyc"]

reportMissingImports = true # Report missing imports
reportUnusedImports = true  # Report unused imports
reportUnusedFunction = true # Report unused functions

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.uv.sources]
jira = { git = "https://github.com/pycontribs/jira.git", rev = "3.10.1" }

#
# Semantic Release Configuration
#

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
version_toml = ["pyproject.toml:project.version"]
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "update"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "style",
  "refactor",
  "test",
]
allowed_tags = [
  "feat",
  "fix",
  "perf",
  "build",
  "chore",
  "ci",
  "docs",
  "style",
  "refactor",
  "test",
]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
